name: Build and Deploy Unwrapper bot 

on:
  push:
    tags:
      - "**"

jobs:

  build:
    env:
      REGISTRY: docker.io                       
      IMAGE_NAME: witnet/wrap-wit-unwrapper

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.ref_name }}


  update:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.result == 'success' }}
    steps:
      - uses: actions/checkout@v4

      - name: Create Deployment Files
        shell: bash
        env:
            LOKI: ${{ secrets.LOKI_URL }}
            APKEY: ${{ secrets.ANSIBLE_PRIVATE_KEY }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: us-east-2
        run: |
            echo "$APKEY" > ./key.pem
            chmod 400 ./key.pem
            ./generate-inventory.sh
            find . -type f -exec sed -i "s#LOKI-REPLACE-ME#$LOKI#g" {} +

      - name: Deploy with Ansible
        env:
            WRAPPED_WIT_UNWRAPPER_WIT_MASTER_KEY_TESTNET: ${{ secrets.WRAPPED_WIT_UNWRAPPER_WIT_MASTER_KEY_TESTNET }}
            WRAPPED_WIT_UNWRAPPER_ETH_WSS_PROVIDER_TESTNET: ${{ secrets.WRAPPED_WIT_UNWRAPPER_ETH_WSS_PROVIDER_TESTNET }}
            # WRAPPED_WIT_UNWRAPPER_WIT_MASTER_KEY_MAINNET: ${{ secrets.WRAPPED_WIT_UNWRAPPER_WIT_MASTER_KEY_MAINNET }}
            # WRAPPED_WIT_UNWRAPPER_ETH_WSS_PROVIDER_MAINNET: ${{ secrets.WRAPPED_WIT_UNWRAPPER_ETH_WSS_PROVIDER_MAINNET }}
        shell: bash
        run: |
            ansible-galaxy install -r requirements.yml
            export ANSIBLE_CONFIG=./ansible.cfg
            ansible-playbook playbook.yml -vv